dtmc

global q1x : [1..4] init 1;
global q1y : [1..4] init 1;
global q2x : [1..4] init 2;
global q2y : [1..4] init 2;
global q3x : [1..4] init 3;
global q3y : [1..4] init 3;
global q4x : [1..4] init 4;
global q4y : [1..4] init 4;

global nbr_attacked_queens : [0..4] init 4;
global counter : [0..1000] init 0;
global probabiliy : [0..1] init 1;
const double probability_dec_rate = 0.01;

module q1

	// random column shuffle
	[] (under_attack_diag | under_attack_column) & q1x = 1 -> 0.33: (q1x' = 2) + .33: (q1x' = 3) + .34: (q1x' = 4);
	[] (under_attack_diag | under_attack_column) & q1x = 2 -> 0.33: (q1x' = 1) + .33: (q1x' = 3) + .34: (q1x' = 4);
	[] (under_attack_diag | under_attack_column) & q1x = 3 -> 0.33: (q1x' = 2) + .33: (q1x' = 1) + .34: (q1x' = 4);
	[] (under_attack_diag | under_attack_column) & q1x = 4 -> 0.33: (q1x' = 2) + .33: (q1x' = 3) + .34: (q1x' = 1);

endmodule

// formula's calculating whether under attack
formula under_attack_diag = ((q1x-q2x) = (q1y-q2y) | (q1x-q2x) = -(q1y-q2y)) | ((q1x-q3x) = (q1y-q3y) | (q1x-q3x) = -(q1y-q3y)) |  ((q1x-q4x) = (q1y-q4y) | (q1x-q4x) = -(q1y-q4y));
formula under_attack_column = (q1x = q2x) | (q1x=q3x) | (q1x=q4x);

formula total_attacks = ;

formula under_attack_diag_moving_to_1 & 


module q2 = q1 [ q1x=q2x, q2x=q1x, q1y=q2y, q2y=q1y ] endmodule
module q3 = q1 [ q1x=q3x, q3x=q1x, q1y=q3y, q3y=q1y ] endmodule
module q4 = q1 [ q1x=q4x, q4x=q1x, q1y=q4y, q4y=q1y ] endmodule

